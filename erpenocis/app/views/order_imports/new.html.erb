<div class="row">
  <div class="col-lg-6 grid-margin stretch-card mb-0">
    <div class="card">
      <div class="card-body">
        <h1>Importa necesar materiale</h1>
        <%= render 'example_table' %>
        <p>Se poate folosi un fisier Excel(xls sau xlsx) pentru a importa date.
        <p>Poti folosi un tabel exportat din aplicatie sau poti creea un tabel nou care sa respecte urmatoarele</p>
        <p>Primul rand este ignorat. <br>Al doilea rand ar trebui sa contina coloanele<br> Id | Categorie | Denumire/Tip/Nuanta | Cant. necesara | UM | Cote | Observatii <br> Trebuie sa fie toate aceste coloane chiar daca nu exista informatii in ele<br> Nu conteaza ordinea coloanelor <br> Daca exista alte coloane decat cele de mai sus vor fi ignorate<br> Daca intr-o celula informatia nu este corecta(ex: daca e scris "In derulare" in coloana de data finalizare, deoarece aplicatia asteapta ceva ce seamana a data - zz/ll/aaaa zz.ll.aaaa zz-ll-aaaa aaaa/ll/zz aaaa.ll.zz aaaa-ll-zz) nu va fi completata in baza de date</p>
        <p>Campurile de tip data pot fi scrise in oricare din urmatoare forme: zz/ll/aaaa zz.ll.aaaa zz-ll-aaaa aaaa/ll/zz aaaa.ll.zz aaaa-ll-zz</p>
        <p>Daca exista id in tabelul incarcat atunci se face update la inregistrarea existenta, daca nu (sau id-ul nu exista in baza de date) atunci se adauga o noua inregistrare</p>
        <hr>
          <%= form_for @order_import do |f| %>
            <% if @order_import.errors.any? %>
              <div id="error_explanation">
                <h2><%= pluralize(@order_import.errors.count, "eroare", plural: 'erori') %> impiedica aceasta operatiune:</h2>
                <ul>
                <% @order_import.errors.full_messages.each do |msg| %>
                  <li><%= msg %></li>
                <% end %>
                </ul>
              </div>
            <% end %>
          <% if params[:project] || (params[:order_import] && params[:order_import][:proj_id]) %>
            <h4>Importul va fi pentru proiectul: <%= params[:project] ? Project.find_by_id(params[:project]).name : Project.find_by_id(params[:order_import][:project_id]).name %></h4>
            <%= f.hidden_field :project_id, value: params[:project] || params[:order_import][:project_id] %>
            <%= f.hidden_field :proj_id, value: params[:project] || params[:order_import][:project_id] %>
            <%= f.hidden_field :show, value: params[:show] || (params[:order_import] && params[:order_import][:show]) %>
            <% if params[:st] || (params[:order_import] && params[:order_import][:st]) %>
              <%= f.hidden_field :st, value: params[:st] || (params[:order_import] && params[:order_import][:st]) %>
            <% end %>
          <% else %>
            <div class="form-group row">
              <%= f.label :project_id, "Proiect", class: "col-sm-3 col-form-label" %>
              <div class="col-sm-9">
                <%= f.select :project_id, Project.all.map {|c| [c.name, c.id]},{}, class: "form-control form-control-lg" %>    
              </div>
            </div>
          <% end %>
            
          <div class="field mb-3">
            <%= f.file_field :file %>
          </div>
          <%= f.submit "Importa", class: "btn btn-warning text-light" %>
        <% end %>
      </div>
    </div>
  </div>
</div>
<script src=<%= root_url + "data_table_custom_js/order_imports.js"%>></script>